{"version":3,"file":"bundle.js","sourceRoot":"","sources":["../../_src/hello.ts","../../_src/utils.ts","../../_src/terminal.ts","../../_src/index.ts"],"names":[],"mappings":"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","sourcesContent":["export function sayHello() {\n  alert('Hello, world!')\n}\n","export function forEachElement<T extends Element, E extends T>(elements: HTMLCollectionOf<T>, fn: (el: E) => void) {\n  for (let i = 0, len = elements.length; i < len; i++) {\n    var element = elements.item(i)\n    if (element != null) {\n      fn.call(null, element as E)\n    }\n  }\n}\n\nexport function forEachNode<T extends Node>(nodes: NodeListOf<T>, fn: (el: T) => void) {\n  nodes.forEach(value => value && fn.call(null, value))\n}\n\nexport async function delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n","import { delay } from './utils'\n\ninterface Terminal {\n  root: HTMLElement\n  body: HTMLElement\n}\n\ninterface TerminalLine {\n  element: HTMLElement\n  value: string\n}\n\nexport async function createTerminal(root: HTMLElement) {\n  const body = root.querySelector('.terminal-body')\n  if (body instanceof HTMLElement) {\n    const terminal: Terminal = { root, body }\n    const lines = fetchTerminalLines(terminal)\n    await executeTerminal(terminal, lines)\n  }\n\n  // Smooth scroll on continue click\n  const link = root.querySelector('.terminal-continue')\n  if (link instanceof HTMLAnchorElement) {\n    link.addEventListener('click', ev => {\n      const href = link.getAttribute('href') || ''\n      const target = document.querySelector(href)\n      if (target instanceof HTMLElement) {\n        target.scrollIntoView({ behavior: 'smooth' })\n        ev.preventDefault()\n      }\n    })\n  }\n}\n\nasync function executeTerminal(terminal: Terminal, lines: TerminalLine[]) {\n  const root = terminal.root\n  root.classList.add('terminal--animating')\n\n  while (lines.length > 0) {\n    const line = lines.shift() as TerminalLine\n    await executeTerminalLine(terminal, line)\n  }\n\n  await delay(600)\n  root.classList.remove('terminal--animating')\n}\n\nasync function executeTerminalLine(terminal: Terminal, line: TerminalLine) {\n  const { root, body } = terminal\n\n  body.append(line.element)\n\n  if (line.element.dataset['delay']) {\n    const delayTime = Number(line.element.dataset['delay'])\n    await delay(delayTime)\n  }\n\n  root.classList.add('terminal--typing')\n\n  const sequence = line.value.split('')\n  while (sequence.length > 0) {\n    const seq = sequence.shift() || ''\n    line.element.textContent += seq\n    await delay(80)\n  }\n\n  await delay(200)\n  root.classList.remove('terminal--typing')\n}\n\nfunction fetchTerminalLines(terminal: Terminal): TerminalLine[] {\n  return terminal.body ? parseTerminalBody(terminal.body) : []\n}\n\nfunction parseTerminalBody(body: HTMLElement): TerminalLine[] {\n  return Array.from(body.children)\n    .filter(el => el instanceof HTMLParagraphElement)\n    .map(el => transformTerminalElement(el as HTMLElement))\n}\n\nfunction transformTerminalElement(element: HTMLElement): TerminalLine {\n  const value = element.textContent || ''\n  element.innerHTML = ''\n  element.remove()\n\n  return { element, value }\n}\n","import { createTerminal } from './terminal'\nimport { forEachElement } from './utils'\n\nconst terminalElements = document.getElementsByClassName('terminal')\nforEachElement(terminalElements, startTerminal)\n\nasync function startTerminal(el: HTMLElement) {\n  await createTerminal(el)\n  console.log(\"Terminal done!\")\n}\n"]}