{"version":3,"file":"bundle.js","sourceRoot":"","sources":["../../_src/hello.ts","../../_src/utils.ts","../../_src/terminal.ts","../../_src/index.ts"],"names":[],"mappings":"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","sourcesContent":["export function sayHello() {\n  alert('Hello, world!')\n}\n","export function forEachElement<T extends Element, E extends T>(elements: HTMLCollectionOf<T>, fn: (el: E) => void) {\n  for (let i = 0, len = elements.length; i < len; i++) {\n    var element = elements.item(i)\n    if (element != null) {\n      fn.call(null, element as E)\n    }\n  }\n}\n\nexport function forEachNode<T extends Node>(nodes: NodeListOf<T>, fn: (el: T) => void) {\n  nodes.forEach(value => value && fn.call(null, value));\n}\n\nexport async function delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import { delay } from \"./utils\"\n\nenum TerminalSectionType {\n  TYPE_CARRIAGE = \"carriage\",\n  TYPE_CHARACTER = \"character\",\n  TYPE_DELAY = \"delay\",\n}\n\ninterface TerminalSection {\n  type: TerminalSectionType\n  value?: string|number|null\n}\n\nexport async function createTerminal(el: HTMLElement) {\n  const sections = buildTerminalSections(el.children)\n  executeTerminalSections(el, sections)\n}\n\nasync function executeTerminalSections(el: HTMLElement, sections: TerminalSection[]) {\n  let spanElement: HTMLSpanElement | null = null\n  el.innerHTML = \"\"\n\n  while (sections.length > 0) {\n    const section = sections.shift()\n    if (section?.type === TerminalSectionType.TYPE_CARRIAGE) {\n      el.append(document.createElement(\"br\"))\n      spanElement = document.createElement(\"span\")\n      el.append(spanElement)\n    }\n    else if (section?.type === TerminalSectionType.TYPE_CHARACTER) {\n      if (spanElement == null) {\n        spanElement = document.createElement(\"span\")\n        el.append(spanElement)\n      }\n      if (spanElement) {\n        spanElement.append(document.createTextNode(section.value as string))\n      }\n      await delay(70)\n    }\n    else if (section?.type === TerminalSectionType.TYPE_DELAY) {\n      await delay(section.value as number)\n    }\n  }\n}\n\nfunction buildTerminalSections(elements: HTMLCollectionOf<Element>): TerminalSection[] {\n  let sections: TerminalSection[] = []\n\n  for (let i = 0, len = elements.length; i < len; i++) {\n    const element = elements.item(i)\n    if (element instanceof HTMLSpanElement) {\n      sections.push(...buildComplexSections(element))\n    }\n  }\n\n  return sections\n}\n\nfunction buildComplexSections(element: HTMLElement): TerminalSection[] {\n  let sections: TerminalSection[] = []\n\n  sections.push({ type: TerminalSectionType.TYPE_CARRIAGE })\n\n  if (element.dataset[\"delay\"]) {\n    let value = Number(element.dataset[\"delay\"])\n    sections.push({ type: TerminalSectionType.TYPE_DELAY, value })\n  }\n\n  if (element.textContent) {\n    let sequence = element.textContent.trim()\n    for (let value of sequence.split('')) {\n      sections.push({ type: TerminalSectionType.TYPE_CHARACTER, value })\n    }\n  }\n\n  return sections\n}\n","import { createTerminal } from './terminal'\nimport { forEachElement } from './utils'\n\nconst terminalElements = document.getElementsByClassName('terminal')\nforEachElement(terminalElements, createTerminal)\n"]}